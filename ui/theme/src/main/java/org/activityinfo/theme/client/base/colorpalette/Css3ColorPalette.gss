/**
 * Sencha GXT 4.0.0 - Sencha for GWT
 * Copyright (c) 2006-2015, Sencha Inc.
 *
 * licensing@sencha.com
 * http://www.sencha.com/products/gxt/license/
 *
 * ================================================================================
 * Open Source License
 * ================================================================================
 * This version of Sencha GXT is licensed under the terms of the Open Source GPL v3
 * license. You may use this license only if you are prepared to distribute and
 * share the source code of your application under the GPL v3 license:
 * http://www.gnu.org/licenses/gpl.html
 *
 * If you are NOT prepared to distribute and share the source code of your
 * application under the GPL v3 license, other commercial and oem licenses
 * are available for an alternate download of Sencha GXT.
 *
 * Please see the Sencha GXT Licensing page at:
 * http://www.sencha.com/products/gxt/license/
 *
 * For clarification or additional options, please contact:
 * licensing@sencha.com
 * ================================================================================
 *
 *
 * ================================================================================
 * Disclaimer
 * ================================================================================
 * THIS SOFTWARE IS DISTRIBUTED "AS-IS" WITHOUT ANY WARRANTIES, CONDITIONS AND
 * REPRESENTATIONS WHETHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION THE
 * IMPLIED WARRANTIES AND CONDITIONS OF MERCHANTABILITY, MERCHANTABLE QUALITY,
 * FITNESS FOR A PARTICULAR PURPOSE, DURABILITY, NON-INFRINGEMENT, PERFORMANCE AND
 * THOSE ARISING BY STATUTE OR FROM CUSTOM OR USAGE OF TRADE OR COURSE OF DEALING.
 * ================================================================================
 */
@def SIZE value('theme.colorpalette.itemSize', 'px');
@def ITEM_PADDING value('theme.colorpalette.itemPadding.toString');
@def BACKGROUND_COLOR value('theme.colorpalette.backgroundColor');
@def BORDER_WIDTH value('theme.colorpalette.itemBorder.toString');
@def BORDER_STYLE value('theme.colorpalette.itemBorder.style');
@def BORDER_COLOR value('theme.colorpalette.itemBorder.color');
@def SELECTED_BACKGROUND_COLOR value('theme.colorpalette.selectedBackgroundColor');
@def SELECTED_BORDER_WIDTH value('theme.colorpalette.selectedBorder.toString');
@def SELECTED_BORDER_STYLE value('theme.colorpalette.selectedBorder.style');
@def SELECTED_BORDER_COLOR value('theme.colorpalette.selectedBorder.color');

.colorPalette {
  background-color: BACKGROUND_COLOR;
  border-collapse: collapse;
}

.anchor {
  border-color: BACKGROUND_COLOR;
  border-style: SELECTED_BORDER_STYLE;
  border-width: SELECTED_BORDER_WIDTH;
  padding: ITEM_PADDING;
}

.inner {
  height: SIZE;
  width: SIZE;
  line-height: SIZE;
}

.wrapper {
  border-color: BORDER_COLOR;
  border-style: BORDER_STYLE;
  border-width: BORDER_WIDTH;
}

.hover, 
.selected {
  border-color: SELECTED_BORDER_COLOR;
  border-style: SELECTED_BORDER_STYLE;
  border-width: SELECTED_BORDER_WIDTH;
  background-color: SELECTED_BACKGROUND_COLOR;
}
