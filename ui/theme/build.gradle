
apply plugin: 'com.moowork.gulp'

node {
    // Version of node to use.
    version = '8.11.0'
    npmVersion = '5.8.0'

    // Enabled the automatic download. False is the default (for now).
    download = true
}


// run npm install
gulp_build.dependsOn 'npmInstall'

// run gulp install
gulp_build.dependsOn 'installGulp'


configurations {
    gwtSdk
}

dependencies {

    compile "com.google.guava:guava:21.0"

    compile libraries.immutables.annotations

    compile "com.google.gwt:gwt-user:2.8.0"
    compile 'com.google.guava:guava-gwt:21.0'

    compile group: 'com.sencha.gxt', name: 'gxt', version: '4.0.0'
    compile group: 'com.sencha.gxt', name: 'gxt-chart', version: '4.0.0'

    gwtSdk "com.google.gwt:gwt-dev:2.8.0"
    compile "com.sencha.gxt:gxt-themebuilder:4.0.0"

}

jar {
    from project.sourceSets.main.allSource
    from project.sourceSets.main.output
}

task themeDevMode(type: JavaExec) {

    dependsOn 'compileJava'

    main = 'com.google.gwt.dev.DevMode'

    // Compiled assets
    classpath "$buildDir/dev-assets"

    // Compiled java classes and libraries second
    classpath sourceSets.main.java.srcDirs
    classpath sourceSets.main.resources.srcDirs
    classpath sourceSets.main.runtimeClasspath
    classpath configurations.gwtSdk

    args '-logLevel', 'INFO'
    args '-war', "${buildDir}/devMode"
    args '-startupUrl', '/ThemeDev/dev.html'
    args '-bindAddress', '0.0.0.0'
    args 'org.activityinfo.theme.dev.ThemeDev'

    doFirst {
        for(cp in classpath) {
            logger.lifecycle("classpath: " + cp)
        }

    }

}
