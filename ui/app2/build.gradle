



ext {
    outputDir = "$buildDir/gwt-out"
}


configurations {
    gwtSdk
}

dependencies {

    compile libraries.immutables.annotations

    compile project(':i18n')
    compile project(':model')
    compile project(':clients:gwtrpc')
    compile project(':clients:gwtrest')
    compile project(':io:match')
    compile project(':ui:icons')

    compile libraries.gwt.user
    compile libraries.gxt
    compile libraries.gwt.gson

    compile libraries.gwt.guice
    compile libraries.gwt.gson
    compile libraries.gwt.leaflet
    compile libraries.gwt.guava

    compile libraries.rebar.style
    compile libraries.rebar.appcache

    compile 'com.allen-sauer.gwt.dnd:gwt-dnd:3.3.0'
    compile 'com.googlecode.gwtquery:gwtquery:1.5-beta1'
    compile 'com.arcbees:gwtchosen:3.0'

    compile group: 'com.google.inject', name: 'guice', version: '3.0', classifier: 'sources'
    compile 'javax.xml.bind:jaxb-api:2.3.0'

    gwtSdk libraries.gwt.dev

}

task compileApp(type: JavaExec) {

    dependsOn compileJava

    outputs.dir outputDir
    inputs.dir sourceSets.main.allSource.srcDirs

    // Compiled java classes and libraries second
    classpath sourceSets.main.java.srcDirs
    classpath sourceSets.main.resources.srcDirs
    classpath sourceSets.main.runtimeClasspath
    classpath configurations.gwtSdk

    main = 'com.google.gwt.dev.Compiler'

    jvmArgs "-Dgwt.persistentunitcache=true"
    jvmArgs "-Dgwt.persistentunitcachedir=${buildDir}/gwtCache"

    args '-logLevel', 'INFO'
    args '-localWorkers', Integer.toString(Runtime.runtime.availableProcessors())

    // Disable class metadata -- Class.getName() will not
    // be available to compiled code, but we save ~150k
    args '-XnoclassMetadata'

    args '-war', outputDir

    args '-extra', "${buildDir}/gwt-extra"

    args '-saveSource'
    args '-gen', "${buildDir}/gwt-gen"

    if("true".equals(project.property("gwtSoyc"))) {
        args '-compileReport'
    }
    if ("dev".equals(project.property("gwtMode"))) {
        args 'org.activityinfo.ui.ActivityInfoDev'
    } else if ("safari".equals(project.property("gwtMode"))) {
        args 'org.activityinfo.ui.ActivityInfoSafariTest'
    } else {
        args 'org.activityinfo.ui.ActivityInfoRelease'
    }
}

compileApp.onlyIf { !project.hasProperty('skipGwt') }
