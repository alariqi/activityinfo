/**
 * Sencha GXT 4.0.0 - Sencha for GWT
 * Copyright (c) 2006-2015, Sencha Inc.
 *
 * licensing@sencha.com
 * http://www.sencha.com/products/gxt/license/
 *
 * ================================================================================
 * Open Source License
 * ================================================================================
 * This version of Sencha GXT is licensed under the terms of the Open Source GPL v3
 * license. You may use this license only if you are prepared to distribute and
 * share the source code of your application under the GPL v3 license:
 * http://www.gnu.org/licenses/gpl.html
 *
 * If you are NOT prepared to distribute and share the source code of your
 * application under the GPL v3 license, other commercial and oem licenses
 * are available for an alternate download of Sencha GXT.
 *
 * Please see the Sencha GXT Licensing page at:
 * http://www.sencha.com/products/gxt/license/
 *
 * For clarification or additional options, please contact:
 * licensing@sencha.com
 * ================================================================================
 *
 *
 * ================================================================================
 * Disclaimer
 * ================================================================================
 * THIS SOFTWARE IS DISTRIBUTED "AS-IS" WITHOUT ANY WARRANTIES, CONDITIONS AND
 * REPRESENTATIONS WHETHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION THE
 * IMPLIED WARRANTIES AND CONDITIONS OF MERCHANTABILITY, MERCHANTABLE QUALITY,
 * FITNESS FOR A PARTICULAR PURPOSE, DURABILITY, NON-INFRINGEMENT, PERFORMANCE AND
 * THOSE ARISING BY STATUTE OR FROM CUSTOM OR USAGE OF TRADE OR COURSE OF DEALING.
 * ================================================================================
 */
@def RADIUS value('theme.errortip.borderRadius', 'px');
@def BORDER_STYLE value('theme.errortip.border.style');
@def BORDER_COLOR value('theme.errortip.border.color');
@def BORDER_WIDTH value('theme.errortip.border.toString');
@def CSS3_LEFTOVER value('theme.errortip.radiusMinusBorderWidth.toString');
@def PADDING value('theme.errortip.padding.toString');
@def MARGIN value('theme.errortip.margin.toString');
@def OPACITY value('theme.errortip.opacity');
@def BACKGROUND_COLOR value('theme.errortip.backgroundColor');
@def HEADER_COLOR value('theme.errortip.headerText.color');
@def HEADER_SIZE value('theme.errortip.headerText.size');
@def HEADER_WEIGHT value('theme.errortip.headerText.weight');
@def HEADER_FAMILY value('theme.errortip.headerText.family');
@def MESSAGE_COLOR value('theme.errortip.messageText.color');
@def MESSAGE_SIZE value('theme.errortip.messageText.size');
@def MESSAGE_WEIGHT value('theme.errortip.messageText.weight');
@def MESSAGE_FAMILY value('theme.errortip.messageText.family');
@def HEADER_PADDING value('theme.errortip.headerPadding.toString');
@def MESSAGE_PADDING value('theme.errortip.messagePadding.toString');

.tipWrap {
  border-color: BORDER_COLOR;
  border-style: BORDER_STYLE;
  border-width: BORDER_WIDTH;
  border-radius: RADIUS;
  overflow: hidden;
  background-color: BACKGROUND_COLOR;
  opacity: OPACITY;
  margin: MARGIN;
  padding: CSS3_LEFTOVER;
}

.tip {
  padding: PADDING;
}

.tools {
  float: right;
}

.heading {
  color: HEADER_COLOR;
  font-size: HEADER_SIZE;
  font-weight: HEADER_WEIGHT;
  font-family: HEADER_FAMILY;
}

.headingWrap {
  padding: HEADER_PADDING;
}

.text {
  color: MESSAGE_COLOR;
  font-size: MESSAGE_SIZE;
  font-weight: MESSAGE_WEIGHT;
  font-family: MESSAGE_FAMILY;
}

.textWrap {
  gwt-sprite: "errorIcon";
  width: auto;
  height: auto;
  background-position: -1 4px;
  padding-left: 20px;
  margin: MESSAGE_PADDING;
}

.anchor {
}

.anchorBottom {
  gwt-sprite: "anchorBottom";
  position: absolute;
}

.anchorRight {
  gwt-sprite: "anchorRight";
  position: absolute;
}

.anchorLeft {
  gwt-sprite: "anchorLeft";
  position: absolute;
}

.anchorTop {
  gwt-sprite: "anchorTop";
  position: absolute;
}
