

apply plugin: 'com.moowork.gulp'

node {
    // Version of node to use.
    version = '8.11.0'
    npmVersion = '5.8.0'

    // Enabled the automatic download. False is the default (for now).
    download = true
}

ext {
    outputDir = "$buildDir/gwt-out"
}

repositories {
    maven { url 'https://maven.sencha.com/repo/gxt-gpl-release/' }
}

task explodedWar(type: Copy) {
    from 'src/main/webapp'
    into "$buildDir/exploded"
}


jar {
    from project.sourceSets.main.allSource
    from project.sourceSets.main.output
    from project.sourceSets.main.output.generatedSourcesDir
}

sourceSets {

    // Define a seperate sourceSet for GWT test cases that
    // are actually compiled to JavaScript and then executed.
    // These require a different classpath than our normal Junit tests
    gwtTest {
        java {
            srcDir 'src/testgwt/java'
            compileClasspath += main.output
            runtimeClasspath += main.output
        }
    }
}

configurations {
    gwt
    gwtSdk
}

dependencies {

    compile libraries.gwt.user

    compile "com.google.guava:guava:21.0"

    compile libraries.immutables.annotations

    compile project(':model')
    compile project(':store:query');
    compile project(':i18n')
    compile project(':clients:gwtrest')
    compile project(':io:match')
    compile project(':io:csv')
    compile project(':analysis')

    compile project(':tools:codemirror')
    compile project(':tools:indexeddb')

    compile project(':tools:vdom')

    compile libraries.rebar.appcache

    compile libraries.sencha.gxt
    compile libraries.sencha.chart
    compile(libraries.sencha.themebuilder) {
        exclude group: 'org.apache.xmlgraphics', module: 'batik-rasterizer'
        exclude group: 'org.apache.xmlgraphics', module: 'batik-script'
    }

    compile 'com.google.elemental2:elemental2-core:1.0.0-RC1'
    compile 'com.google.elemental2:elemental2-dom:1.0.0-RC1'

    annotationProcessor project(':tools:model-apt')

    testCompile libraries.gwt.servlet
    testCompile project(':store:testing')
    testCompile project(':tools:indexeddb').sourceSets.test.output


    // Sources need for compiling to JavaScript
    gwt 'com.google.guava:guava-gwt:21.0'
    gwt libraries.gwt.gson
//    gwt 'com.github.gwtreact:gwt-react:1.0.0'

    // Sources need for compiling tests to JavaScript
    gwtTestCompile libraries.gwt.user

    // Toolkit that includes Java->JavaScript compiler
    gwtSdk libraries.gwt.dev

}


// run npm install
gulp_build.dependsOn 'npmInstall'

// run gulp install
gulp_build.dependsOn 'installGulp'


task compileApp(type: JavaExec) {

    dependsOn 'gulp_build'

    outputs.dir outputDir
    inputs.dir sourceSets.main.allSource.srcDirs

    classpath new File(buildDir, "assets")

    // Compiled java classes and libraries second
    classpath sourceSets.main.java.srcDirs
    classpath sourceSets.main.resources.srcDirs
    classpath sourceSets.main.runtimeClasspath
    classpath sourceSets.main.output.generatedSourcesDir
    classpath configurations.gwt
    classpath configurations.gwtSdk

    main = 'com.google.gwt.dev.Compiler'

    jvmArgs "-Dgwt.persistentunitcache=true"
    jvmArgs "-Dgwt.persistentunitcachedir=${buildDir}/gwtCache"

    args '-logLevel', 'INFO'
    args '-sourceLevel', '1.8'
    args '-localWorkers', Integer.toString(Runtime.runtime.availableProcessors())
    args '-war', outputDir
    args 'org.activityinfo.ui.AppProd'

}

compileApp.onlyIf { !project.hasProperty('skipGwt') }

task testOffline(type: JavaExec) {

    dependsOn compileTestJava

    classpath configurations.gwtSdk

    classpath sourceSets.main.java.srcDirs
    classpath sourceSets.main.resources.srcDirs
    classpath sourceSets.main.runtimeClasspath
    classpath sourceSets.main.output.generatedSourcesDir
    classpath sourceSets.test.java.srcDirs
    classpath sourceSets.test.runtimeClasspath
    classpath configurations.testCompile

    main = 'junit.textui.TestRunner'

    jvmArgs "-Dgwt.args=-runStyle Manual:1 -style pretty -war ${buildDir}/testWar -workDir ${buildDir}/testGwtWork"
    args 'org.activityinfo.ui.client.store.offline.OfflineStoreGwtTest'

}
