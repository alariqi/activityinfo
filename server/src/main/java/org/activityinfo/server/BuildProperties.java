/*
 * ActivityInfo
 * Copyright (C) 2009-2013 UNICEF
 * Copyright (C) 2014-2018 BeDataDriven Groep B.V.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.activityinfo.server;

import com.google.common.base.Charsets;
import com.google.common.io.CharSource;
import com.google.common.io.Resources;

import java.io.Reader;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * Retrieves build properties for this build.
 *
 * <p>The build.properties is generated by the <code>server/buildProperties.gradle</code>
 * build script.</p>
 */
public class BuildProperties {

    private static final Logger LOGGER = Logger.getLogger(BuildProperties.class.getName());

    public static final BuildProperties PROPERTIES = new BuildProperties();

    private String version = "dev";
    private String commitId = "dev";

    private BuildProperties() {
        try {
            CharSource source = Resources.asCharSource(Resources.getResource("build.properties"), Charsets.UTF_8);
            try(Reader reader = source.openStream()) {
                Properties properties = new Properties();
                properties.load(reader);

                version = properties.getProperty("version");
                commitId = properties.getProperty("commitId");
            }
        } catch (Exception e) {
            LOGGER.log(Level.SEVERE, "Could not read build.properties", e);
        }
    }

    public String getVersion() {
        return version;
    }

    public String getCommitId() {
        return commitId;
    }
}
