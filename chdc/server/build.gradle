
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'commons-net:commons-net:3.6'
    }
}

plugins {
    id "java"
    id "war"
}

configurations {
    gwtSdk {
        extendsFrom compile
    }
}

dependencies {
    compile project(':model')
    compile project(':store:apiserver')

    compile group: 'javax.inject', name: 'javax.inject', version: '1'
    compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'

    compile libraries.jersey.servlet

    compile 'com.zaxxer:HikariCP:2.7.2'
    compile 'mysql:mysql-connector-java:5.1.44'


    gwtSdk "com.google.gwt:gwt-dev:2.8.0"
}

war {
    archiveName = "ROOT.war"
    /* Include compiled Javascript application */
    from(project(':chdc:frontend').outputDir) {
        exclude("**/*.symbolMap")
    }
}

tasks.war.dependsOn ':chdc:frontend:compileApp'

task prepareDevMode(type: Copy) {
    into "$buildDir/devMode"
    from "src/main/webapp"
}


task devMode(type: JavaExec) {

    dependsOn prepareDevMode
    dependsOn classes
    dependsOn ":chdc:database:update"

    classpath project(':ui:app').sourceSets.main.java.srcDirs
    classpath project(':chdc:frontend').buildDir.absolutePath + "/theme"
    classpath project(':chdc:frontend').sourceSets.main.java.srcDirs
    classpath project(':chdc:frontend').sourceSets.main.resources.srcDirs
    classpath project(':chdc:frontend').sourceSets.main.runtimeClasspath


    classpath sourceSets.main.runtimeClasspath

    main = 'com.google.gwt.dev.DevMode'

    // Configure local database
    environment 'localMySqlUsername', project.property("localMySqlUsername")
    environment 'localMySqlPassword', project.property("localMySqlPassword")

    // Enable debugging
    jvmArgs "-Xdebug"
    jvmArgs "-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000"

    args '-startupUrl', 'App/demo.html'
    args '-war', "$buildDir/devMode"

    args 'chdc.frontend.Chdc'
}

task deploy {
    dependsOn war
    ext {
        host = 'waws-prod-am2-163.ftp.azurewebsites.windows.net'
        user = 'chdc\\inso-deploy'
        webappsDir = '/site/wwwroot/webapps'
    }

    doLast {
        def password = project.property('insoDeployPassword')
        def ftp = new org.apache.commons.net.ftp.FTPClient()
        ftp.connect(host)

        if(!ftp.login(user, password)) {
            throw new RuntimeException("FTPS Login Failed. (user: ${user}")
        }

        war.archivePath.withInputStream {
            ftp.fileType = 2 // binary
            ftp.storeFile("${webappsDir}/ROOT.temp", it)
        }
        ftp.deleteFile("${webappsDir}/ROOT.war")
        ftp.rename("${webappsDir}/ROOT.temp", "${webappsDir}/ROOT.war")
        ftp.disconnect()
    }
}

task restart(type: Exec) {

    commandLine 'az', 'webapp', 'restart', '--resource-group', 'chdc', '--name', 'chdc'

}