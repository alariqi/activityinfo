
// license.gradle

// Define common versions of dependencies to use throughout the project, and
// define conflict resolution rules.

ext {

    guavaVersion = '23.0'
    rebarVersion = '2.5.31'
    gwtVersion = '2.8.2'
    gxtVersion = project.property("gxtVersion")
    jerseyVersion = '1.19.4'
    gaeVersion = '1.9.64'
    jacksonVersion = '1.9.2'
    libraries = [

        guava:              "com.google.guava:guava:${guavaVersion}",
        gson:               "com.google.code.gson:gson:2.2.4",
        guice:              "com.google.inject:guice:3.0",
        guiceServlet:       "com.google.inject.extensions:guice-servlet:3.0",
        guiceMultibindings: "com.google.inject.extensions:guice-multibindings:3.0",
            
        appengine: [
            all:            "com.google.appengine:appengine:${gaeVersion}",
            api:            "com.google.appengine:appengine-api-1.0-sdk:${gaeVersion}",
            apiLabs:        "com.google.appengine:appengine-api-labs:${gaeVersion}",
            trace:          "com.google.cloud.trace:appengine-standard-service:0.3.0",
            sdk:            "com.google.appengine:appengine-java-sdk:${gaeVersion}",
            sdkTools:       "com.google.appengine:appengine-tools-sdk:${gaeVersion}",
            gcs:            "com.google.appengine.tools:appengine-gcs-client:0.6",
            testing:        "com.google.appengine:appengine-testing:${gaeVersion}",
            stubs:          "com.google.appengine:appengine-api-stubs:${gaeVersion}",
            mapreduce:      "com.google.appengine.tools:appengine-mapreduce:0.8.5",
            export: [
                itext:      'com.bedatadriven.appengine.export:appengine-itext:0.1.3',
                awt:        'com.bedatadriven.appengine.export:appengine-awt:0.1.3',
                jcharts:    'com.bedatadriven.appengine.export:appengine-jcharts:0.1.3',
                emf:        'com.bedatadriven.appengine.export:appengine-emf:0.1.3',
            ]
        ],
            
        metrics: [
            core:           'io.dropwizard.metrics:metrics-core:3.1.1'
        ],

        gwt:[
            user:           "com.google.gwt:gwt-user:${gwtVersion}",
            servlet:        "com.google.gwt:gwt-servlet:${gwtVersion}",
            dev:            "com.google.gwt:gwt-dev:${gwtVersion}",
            i18nServer:     'net.lightoze.gwt-i18n-server:gwt-i18n-server:0.22',
            leaflet:        'org.discotools.gwt.leaflet:gwtl-core:0.4.15',
            guice:          "com.google.gwt.inject:gin:2.1.2",
            guava:          "com.google.guava:guava-gwt:${guavaVersion}",
            gson:           "gson-gwt:gson-gwt:2.1",
            jsinterop:      'com.google.jsinterop:jsinterop-annotations:1.0.1'

        ],
            
        gxt:                'com.extjs:gxt:2.3.1-gwt26-bdd-80',

        sencha: [
            gxt:            "com.sencha.gxt:gxt:${gxtVersion}",
            chart:          "com.sencha.gxt:gxt-chart:${gxtVersion}",
            themebuilder:   "com.sencha.gxt:gxt-themebuilder:${gxtVersion}"
        ],

        rebar: [
            time:           "com.bedatadriven.rebar:rebar-time:${rebarVersion}",
            asyncFun:       "com.bedatadriven.rebar:rebar-asyncfun:${rebarVersion}",
            sql:            "com.bedatadriven.rebar:rebar-sql:${rebarVersion}",
            sync:           "com.bedatadriven.rebar:rebar-sync:${rebarVersion}",
            appcache:       "com.bedatadriven.rebar:rebar-appcache:${rebarVersion}",
            style:          "com.bedatadriven.rebar:rebar-style:${rebarVersion}"
        ],
            
        jersey: [
            core:           "com.sun.jersey:jersey-core:${jerseyVersion}",
            server:         "com.sun.jersey:jersey-server:${jerseyVersion}",
            servlet:        "com.sun.jersey:jersey-servlet:${jerseyVersion}",
            simpleServer:   "com.sun.jersey.contribs:jersey-simple-server:${jerseyVersion}",
            client:         "com.sun.jersey:jersey-client:${jerseyVersion}",
            guice:          "com.sun.jersey.contribs:jersey-guice:${jerseyVersion}",
            json:           "com.sun.jersey:jersey-json:${jerseyVersion}",
            multipart:      "com.sun.jersey.contribs:jersey-multipart:${jerseyVersion}"
        ],
            
        jackson: [
            core:           "org.codehaus.jackson:jackson-core-asl:${jacksonVersion}",
            mapper:         "org.codehaus.jackson:jackson-mapper-asl:${jacksonVersion}",
            geojson:        'com.bedatadriven:jackson-geojson:0.7'
        ],
            
        slf4j: [
            api:            'org.slf4j:slf4j-api:1.6.1',
            impl:           'org.slf4j:slf4j-jdk14:1.6.1'
        ],

        swagger: [
            annotations:    'io.swagger.core.v3:swagger-annotations:2.0.0-rc4',
            core:           'io.swagger.core.v3:swagger-core:2.0.0-rc4',
            jaxrs:          'io.swagger.core.v3:swagger-jaxrs2:2.0.0-rc4',
            codegen:        'io.swagger:swagger-codegen:3.0.0-rc0'
        ],

        hibernate: [
            entitymanager:  'org.hibernate:hibernate-entitymanager:4.2.8.Final',
            spatial:        'org.hibernate:hibernate-spatial:4.0',
            validator:      'org.hibernate:hibernate-validator:4.3.1.Final'
        ],
        liquibase:          'org.liquibase:liquibase-core:3.4.2',

        commons: [
            fileupload:     'commons-fileupload:commons-fileupload:1.2.2',
            io:             'commons-io:commons-io:1.3.2'    
        ],
            
        poi:                'org.apache.poi:poi:3.8',

        jts:                'com.vividsolutions:jts:1.13',
        
        junit:              'junit:junit:4.11',
        hamcrest:           'org.hamcrest:hamcrest-library:1.3',
        easymock:           'org.easymock:easymock:3.1',
        dbunit:             'org.dbunit:dbunit:2.4.8',
        c3p0:               'com.mchange:c3p0:0.9.5',
            
        freemarker:         'org.freemarker:freemarker-gae:2.3.20',
            
        jdbc: [
            mysql:          'mysql:mysql-connector-java:5.1.27',
            sqlite:         'org.xerial:sqlite-jdbc:3.6.17'
        ],
            
            
        bcrypt:             'org.mindrot.bcrypt:bcrypt:0.3',
            
        google: [
            apiClient:      'com.google.api-client:google-api-client:1.19.0',
        ],            
        prettytime:         'org.ocpsoft.prettytime:prettytime:2.1.2.Final' ,
        jsr305:             'com.google.code.findbugs:jsr305:3.0.0',
        immutables: [
            apt:            "org.immutables:value:2.4.4",
            annotations:    "org.immutables:value:2.4.4:annotations"
        ],

        fastutil:           "it.unimi.dsi:fastutil:8.2.1"
    ]
}

subprojects {

    configurations.all {

        // Required by Hibernate Spatial but not needed
        exclude group:'postgresql', module: 'postgresql' 
        exclude group:'org.postgresql', module: 'postgresql-jdbc'
        exclude group:'org.postgis', module: 'postgis-jdbc'


        // Conflicts with hibernate's version of the API
        exclude group:'javax.persistence', module: 'persistence-api'
        exclude group:'javax.transaction', module: 'jta'

        exclude group:'com.sun.xml.bind', module:'jaxb-impl'

        exclude module: 'guava-jdk5'
        
        //  javax.servlet:servlet-api:2.5 is not generically typed
        // use the implementation provided by gwt-servlet
        exclude group: 'javax.servlet', module: 'servlet-api'


        // Exclude CGLIB which is actually repackaged by guice
        exclude group: 'org.sonatype.sisu.inject', module:'cglib'
        
        resolutionStrategy {

            force libraries.jts
            force libraries.gson

            // Resolve dependencies as Maven would have for the moment
            // to avoid introducing changes with the new build script

            force 'com.google.api-client:google-api-client:1.19.0'
            force 'org.json:json:20090211'
            

            eachDependency { DependencyResolveDetails details ->
                if (details.requested.group == 'org.codehaus.jackson') {
                    details.useVersion jacksonVersion
                } else if(details.requested.group == 'com.google.appengine') {
                    details.useVersion gaeVersion
                } else if(details.requested.group == 'org.apache.poi' && details.requested.name == 'poi') {
                    details.useVersion '3.12-beta1'
                } else if(details.requested.group == 'com.google.gwt') {
                    details.useVersion gwtVersion
                } else if(details.requested.group == 'com.sun.jersey') {
                    details.useVersion jerseyVersion
                }
            }
        }
    }

}